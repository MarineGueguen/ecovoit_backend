version: '3.8'

services:
  front:
    image: ecovoit/ecovoit-front-staging
    command: sh -c "npm run build"
    volumes:
      - web-client-build:/app/build
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=staging
  api:
    image: ecovoit/ecovoit-back-staging
    environment:
      - NODE_ENV=staging
    expose:
      - 4000
    depends_on:
      db:
        condition: service_healthy
    #extra_hosts:
      # - "host.docker.internal:host-gateway"
      #- "host.docker.internal:172.17.0.1"
  db:
    image: postgres
    restart: always
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecovoit
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  nginx:
    image: nginx:1.21.3
    depends_on:
      - front
      - api
    restart: always
    ports:
      - ${GATEWAY_PORT:-8001}:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - web-client-build:/web-client-build
      - ./logs:/var/log/nginx
volumes:
    web-client-build:
    dbdata: